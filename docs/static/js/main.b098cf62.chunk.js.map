{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","placeholder","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","height","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","root","document","getElementById","ReactDOM","render"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,YAAY,WACZC,MAAOV,EACPW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbM,kBAcXA,GAdW,4CAAH,sDCANS,EAAc,SAAC,GAAsB,IAArBL,EAAoB,EAApBA,MAAOV,EAAa,EAAbA,IAAa,EAARS,GAErC,OACI,sBAAMO,UAAU,OAAhB,UACI,qBACIC,OAAO,MACPC,IAAKlB,EACLmB,IAAKT,IAET,4BAAIA,QCNHU,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAO,GACPgB,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACN3B,EAAOC,GACH2B,MAAM,SAAAC,GACHH,EAAS,CACLlB,KAAMqB,EACNL,SAAS,SAGvB,CAACvB,IAEIwB,EDbiBK,CAAa7B,GAA9BO,EAF4B,EAE5BA,KAAMgB,EAFsB,EAEtBA,QAcb,OAZAR,QAAQC,IAAIO,GAaR,qCACI,6BAAKvB,IAEJuB,GAAW,wCAEZ,qBAAKL,UAAU,YAAf,SAEQX,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE3BxBmB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,KAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAK9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ+C,EAAWtB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CACHA,SAAUA,GACLA,YCf3BgC,G,MAAOC,SAASC,eAAe,SAErCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.b098cf62.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories((cate)=> [inputValue, ...cate]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Buscar..\"\n                value={inputValue}\n                onChange={ handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired    \n}","\n\nexport const getGif = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ciYj5gEtmIln7s9bGcIw7QR9qsrOy0DQ`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map(img => {\n        return {\n            id : img.id,\n            title : img.title,\n            url : img.images.downsized_medium.url\n        }\n    })\n    console.log(gifs);\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url, id}) => {\n\n    return (\n        <div  className=\"card\">\n            <img \n                height='120'\n                src={url}\n                alt={title}\n            />\n            <p>{title}</p>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n//import { getGif } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data, loading} = useFetchGifs(category);\n\n    console.log(loading);\n\n\n    /* const [images, setImages] = useState([]);\n    \n    useEffect( () => {\n        getGif(category)\n            .then( imgs => setImages(imgs))\n    }, [category]) */\n\n    \n\n    return (\n        <>\n            <h3>{category}</h3>\n            \n            {loading && <p>Loading</p>}\n            \n            <div className='card-grid'>\n                {\n                    data.map( img => (\n                        <GifGridItem\n                            key={img.id} \n                            {...img}\n                        />\n                    ))\n                }\n                \n            </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data : [],\n        loading : true\n    });\n\n    useEffect( () => {\n         getGif(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    },[category])\n\n    return state; //{data:[], loading:true}\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['']);\n\n\n    return (\n        <div>\n            <h2>GIfExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category => {\n                        return <GifGrid \n                            category={category}\n                            key={category}\n                            />\n                    })\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<GifExpertApp />, root);\n\n"],"sourceRoot":""}